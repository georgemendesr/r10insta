// Teste da fun√ß√£o de truncamento inteligente

// Fun√ß√£o para truncar t√≠tulos de forma inteligente
function truncateIntelligently(text, maxLength) {
  if (text.length <= maxLength) return text;
  
  // Encontrar o √∫ltimo espa√ßo antes do limite
  let cutPoint = maxLength;
  while (cutPoint > 0 && text[cutPoint] !== ' ') {
    cutPoint--;
  }
  
  // Se n√£o encontrou um espa√ßo, ou o corte seria muito pequeno
  if (cutPoint < maxLength * 0.7) {
    // Cortar no limite e adicionar retic√™ncias
    return text.substring(0, maxLength - 3) + '...';
  }
  
  // Cortar no √∫ltimo espa√ßo e adicionar retic√™ncias
  let result = text.substring(0, cutPoint).trim();
  
  // Remover pontua√ß√£o final se houver
  result = result.replace(/[.,;:!?]$/, '');
  
  return result + '...';
}

// Testes
const exemplos = [
  "Advogado Piripiriense Jos√© Am√¢ncio Neto √© nomeado coordenador especial",
  "Governador do Piau√≠ anuncia investimento de R$ 200 milh√µes em infraestrutura que beneficiar√° mais de 50 cidades do interior do estado",
  "Prefeitura de Teresina inaugura novo hospital p√∫blico"
];

console.log('üß™ TESTES DE TRUNCAMENTO INTELIGENTE:\n');

exemplos.forEach((titulo, index) => {
  console.log(`TESTE ${index + 1}:`);
  console.log(`Original (${titulo.length} chars): "${titulo}"`);
  console.log(`Truncado (${truncateIntelligently(titulo, 55).length} chars): "${truncateIntelligently(titulo, 55)}"`);
  console.log('---');
});

console.log('\n‚úÖ VANTAGENS:');
console.log('- N√£o corta palavras no meio');
console.log('- Preserva significado');
console.log('- Remove pontua√ß√£o desnecess√°ria');
console.log('- Mant√©m nomes pr√≥prios completos quando poss√≠vel');
